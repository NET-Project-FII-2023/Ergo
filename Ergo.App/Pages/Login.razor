@page "/login"
@using Ergo.App.Auth
@using Ergo.App.ViewModels
@using System.Text.Json
@inject NavigationManager navigationManager
@inject CustomStateProvider authStateProvider

<div class="container">
    <div class="row justify-content-center">
        <div class="col-md-4">
            <h1 class="h2 font-weight-normal login-title text-center">Login</h1>

            <EditForm class="form-signin" OnValidSubmit="OnSubmit" Model="loginRequest">
                <DataAnnotationsValidator />

                <label for="inputUsername" class="sr-only">Username</label>
                <InputText id="inputUsername" class="form-control" @bind-Value="loginRequest.Username" autofocus placeholder="Username" />
                <ValidationMessage For="@(() => loginRequest.Username)" />

                <label for="inputPassword" class="sr-only">Password</label>
                <InputText type="password" id="inputPassword" class="form-control" placeholder="Password" @bind-Value="loginRequest.Password" />
                <ValidationMessage For="@(() => loginRequest.Password)" />

                <br />
                <div class="text-center">
                    <button class="btn btn-lg btn-primary btn-block" type="submit">Sign in</button>
                </div>
                <NavLink href="register" class="navigation-link">
                    <h6 class="font-weight-normal text-center navigation-link">Create account</h6>
                </NavLink>
            </EditForm>

            @if (!string.IsNullOrEmpty(error))
            {
                <div class="toast-container position-fixed bottom-0 end-0 p-3">
                    <div class="toast show" role="alert" aria-live="assertive" aria-atomic="true">
                        <div class="toast-header">
                            <strong class="me-auto">Login Error</strong>
                            <button type="button" class="btn-close" @onclick="DismissError" aria-label="Close"></button>
                        </div>
                        <div class="toast-body" style="color:red">
                            @error
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

@code {
    private LoginViewModel loginRequest { get; set; } = new LoginViewModel();
    private string error;

    private async Task OnSubmit()
    {
        error = null;
        try
        {
            await authStateProvider.Login(loginRequest);
            navigationManager.NavigateTo("/", forceLoad: true);
        }
        catch (Exception ex)
        {
            error = "Invalid credentials";
        }
    }
    private void DismissError()
    {
        error = null;
    }
}
